{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/DeleteCardPopup.js","components/ErrorPopup.js","contexts/CardsContext.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","CurrentUserContext","React","createContext","userObj","name","about","avatar","_id","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","isLiked","likes","some","i","cardLikeButtonClassName","type","onClick","src","link","alt","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","map","el","key","Footer","ImagePopup","modalState","onClose","evt","target","classList","contains","apiRequest","config","this","_url","url","_token","token","fetch","method","headers","authorization","then","res","ok","json","Promise","reject","status","data","body","JSON","stringify","cardId","formData","PopupWithForm","title","containerClass","children","EditProfilePopup","isOpen","onUpdateUser","useState","setName","description","setDescription","useEffect","action","onSubmit","preventDefault","noValidate","id","value","onChange","placeholder","required","minLength","maxLength","autoComplete","EditAvatarPopup","onUpdateAvatar","avatarInputRef","useRef","current","ref","AddPlacePopup","setLink","DeleteCardPopup","ErrorPopup","errCode","CardsContext","App","isEditProfilePopupOpen","setProfilePopupState","isAddPlacePopupOpen","setPlacePopupState","isEditAvatarPopupOpen","setAvatarPopupState","isDeleteCardPopupOpen","setDeleteCardPopupState","isErrorPopupOpen","setErrorPopupState","isImagePopupOpen","setImagePopupState","error","setErrorState","cardToDelete","setCardToDelete","selectedCard","setSelectedCard","setCurrentUser","setCards","setEscListener","document","addEventListener","handleEscPopupClose","handleErrorMessage","err","closeAllPopups","removeEventListener","all","getUserInfo","getInitialCards","user","items","catch","console","log","Provider","changeLikeCardStatus","newCard","newCards","c","userStateObj","saveUserInfo","finally","postCard","avatarStateObj","saveAvatar","delCard","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b891e238.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n        <div className=\"header__logo\"></div>\r\n    </header>\r\n  );\r\n}\r\n  \r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n\r\nexport const userObj = {\r\n  name: '',\r\n  about: '',\r\n  avatar: '',\r\n  _id: ''\r\n}\r\n\r\n","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n  const cardLikeButtonClassName = `${isLiked ? 'card__like-button card__like-button_status_active' : 'card__like-button'}`; \r\n\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      {isOwn && <button type=\"button\" className=\"card__delete-button\" onClick={handleDeleteClick}/>}\r\n      <img src={card ? card.link : ''} alt={card ? card.name : ''} className=\"card__image\" onClick={handleClick}/>\r\n      <div className=\"card__conteiner\">\r\n        <h2 className=\"card__title\">{card ? card.name : ''}</h2>\r\n        <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}>\r\n          <span className=\"card__like-counter\">{card && (card.likes.length > 0) ? card.likes.length : null}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\n\r\nfunction Main({ onEditProfile, onAddPlace, onEditAvatar, onCardClick, cards, onCardLike, onCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__overlay\" onClick={onEditAvatar}>\r\n          <img src={currentUser.avatar} alt=\"Аватар\" className=\"profile__avatar\" />\r\n        </div>\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n          <button type=\"button\" className=\"profile__edit-button\" onClick={onEditProfile}></button>\r\n          <p className=\"profile__character\">{currentUser.about}</p>\r\n        </div>\r\n        <button type=\"button\" className=\"profile__add-button\" onClick={onAddPlace}></button>\r\n      </section>\r\n      <section className=\"elements\">\r\n        {cards.map(el => <Card card={el} key={el._id} onCardClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete}/>)}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction ImagePopup({ card, modalState, onClose }) {\r\n\r\n  function handleClose(evt) {\r\n    if (evt.target.classList.contains('modal')) {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`modal modal_type_photo ${modalState}`} onClick={handleClose}>\r\n      <div className=\"modal__container modal__conteiner_type_photo\">\r\n        <button type=\"button\" className=\"modal__close-button\" onClick={onClose}></button>\r\n        <img src={card.link ? card.link : null} alt={card.name ? card.name : null} className=\"modal__image\"/>\r\n        <h3 className=\"modal__title modal__title_type_photo\">{card.name ? card.name : null}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","export class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._token = config.token;\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  postCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  delCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  saveUserInfo(formData) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  saveAvatar(formData) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: isLiked ? 'DELETE' : 'PUT',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n}\n\nconst apiRequest = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-15',\n  token: '06e1dc17-91d9-4de2-856b-fec4fd742305'\n})\n\nexport default apiRequest;","import React from 'react';\r\n\r\nfunction PopupWithForm({ name, modalState, title, containerClass, onClose, children }) {\r\n  \r\n  function handleClose(evt) {\r\n    if (evt.target.classList.contains('modal')) {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={`modal modal_type_${name} ${modalState}`} onClick={handleClose}>\r\n        <div className={`modal__container ${containerClass}`}>\r\n          <button type=\"button\" className=\"modal__close-button\" onClick={onClose}></button>\r\n          <h3 className=\"modal__title\">{title}</h3>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n\r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]); \r\n \r\n  function handleNameChange(evt) {\r\n    setName(evt.target.value)\r\n  }\r\n\r\n  function handleDescriptionChange(evt) {\r\n    setDescription(evt.target.value)\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault(); \r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm \r\n      title='Редактировать профиль' \r\n      name='edit-profile' \r\n      modalState={isOpen ? 'modal_opened' : ''} \r\n      onClose={onClose}\r\n      children={\r\n      <form action=\"#\" name=\"edit-profile\" className=\"modal__form modal__form_type_profile\" onSubmit={handleSubmit} noValidate>\r\n        <input id=\"name-input\" name=\"name\" type=\"text\" className=\"modal__input modal__input_type_name\" value={name} onChange={handleNameChange} placeholder=\"Имя\" required minLength=\"2\" maxLength=\"40\" autoComplete=\"off\"/>\r\n        <span id=\"name-input-error\" className=\"modal__input-error\"></span>\r\n        <input id=\"character-input\" name=\"about\" type=\"text\" className=\"modal__input modal__input_type_character\" value={description} onChange={handleDescriptionChange} placeholder=\"Занятие\" required minLength=\"2\" maxLength=\"200\" autoComplete=\"off\"/>\r\n        <span id=\"character-input-error\" className=\"modal__input-error\"></span>\r\n        <button type=\"submit\" className=\"modal__save-button\">Сохранить</button>\r\n      </form>\r\n    }/>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\r\n  const avatarInputRef = React.useRef();\r\n \r\n  function handleUrlChange(evt) {\r\n    avatarInputRef.current.value = evt.target.value;\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault(); \r\n\r\n    onUpdateAvatar({\r\n      avatar: avatarInputRef.current.value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm \r\n      title='Обновить аватар' \r\n      name='edit-avatar' \r\n      modalState={isOpen ? 'modal_opened' : ''} \r\n      onClose={onClose}\r\n      children={\r\n      <form action=\"#\" name=\"edit-avatar\" className=\"modal__form modal__form_type_avatar\" onSubmit={handleSubmit} noValidate>\r\n        <input id=\"url-input\" name=\"avatar\" type=\"url\" className=\"modal__input modal__input_type_link\" ref={avatarInputRef} onChange={handleUrlChange} placeholder=\"Ссылка на аватар\" required minLength=\"2\" maxLength=\"200\" autoComplete=\"off\"/>\r\n        <span id=\"url-input-error\" className=\"modal__input-error\"></span>\r\n        <button type=\"submit\" className=\"modal__save-button\">Сохранить</button>\r\n      </form>\r\n    }/>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup ({ isOpen, onClose, onAddPlace }) {\r\n  const [name, setName] = React.useState('');\r\n  const [link, setLink] = React.useState('');\r\n\r\n  function handleNameChange(evt) {\r\n    setName(evt.target.value)\r\n  }\r\n\r\n  function handleLinkChange(evt) {\r\n    setLink(evt.target.value)\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault(); \r\n\r\n    onAddPlace({\r\n      name: name,\r\n      link: link,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm \r\n      title='Новое место'  \r\n      name='add-card' \r\n      modalState={isOpen ? 'modal_opened' : ''} \r\n      onClose={onClose}\r\n      children={\r\n      <form action=\"#\" name=\"add-card\" className=\"modal__form modal__form_type_addcard\" onSubmit={handleSubmit} noValidate>\r\n        <input id=\"place-input\" name=\"name\" type=\"text\" className=\"modal__input modal__input_type_place\" value={name} onChange={handleNameChange} placeholder=\"Название\" required minLength=\"1\" maxLength=\"30\" autoComplete=\"off\"/>\r\n        <span id=\"place-input-error\" className=\"modal__input-error\"></span>\r\n        <input id=\"url-input\" name=\"link\" type=\"url\" className=\"modal__input modal__input_type_link\" value={link} onChange={handleLinkChange} placeholder=\"Ссылка на картинку\" required minLength=\"2\" maxLength=\"200\" autoComplete=\"off\"/>\r\n        <span id=\"url-input-error\" className=\"modal__input-error\"></span>\r\n        <button type=\"submit\" className=\"modal__save-button\">Создать</button>\r\n      </form>\r\n    }/>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction DeleteCardPopup ({ card, isOpen, onClose, onCardDelete }) {\r\n\r\n  function handleClick() {\r\n    onCardDelete(card)\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm \r\n    title='Вы уверены?' \r\n    name='del-card'\r\n    modalState={isOpen ? 'modal_opened' : ''} \r\n    onClose={onClose}\r\n    children={\r\n      <button type=\"button\" className=\"modal__confirm-button\" onClick={handleClick}>Да</button>\r\n    }/>\r\n  );\r\n}\r\n\r\nexport default DeleteCardPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ErrorPopup ({ isOpen, onClose, errCode }) {\r\n  return (\r\n    <PopupWithForm \r\n    title={`Что-то пошло не так... ${errCode}`}\r\n    name='error'   \r\n    containerClass='modal__conteiner_type_error'\r\n    modalState={isOpen ? 'modal_opened' : ''} \r\n    onClose={onClose}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ErrorPopup;","import React from 'react';\r\n\r\nexport const CardsContext = React.createContext();","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport apiRequest from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ErrorPopup from './ErrorPopup';\nimport { CurrentUserContext, userObj } from '../contexts/CurrentUserContext';\nimport { CardsContext } from '../contexts/CardsContext';\n\n\nfunction App() {\n  const [isEditProfilePopupOpen, setProfilePopupState] = React.useState(false);\n  const [isAddPlacePopupOpen, setPlacePopupState] = React.useState(false);\n  const [isEditAvatarPopupOpen, setAvatarPopupState] = React.useState(false);\n  const [isDeleteCardPopupOpen, setDeleteCardPopupState] = React.useState(false);\n  const [isErrorPopupOpen, setErrorPopupState] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupState] = React.useState(false);\n\n  const [error, setErrorState] = React.useState('');\n  const [cardToDelete, setCardToDelete] = React.useState({});\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState(userObj);\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([apiRequest.getUserInfo(), apiRequest.getInitialCards()])\n    .then(([user, items]) => {\n      setCurrentUser(user);      \n      setCards(items);\n    })\n    .catch(err => {\n      console.log(err);\n      handleErrorMessage(err);\n    })\n  }, []); // eslint-disable-line\n\n  function setEscListener() {\n    document.addEventListener('keyup', handleEscPopupClose);\n  }\n\n  function handleEditAvatarClick() {\n    setAvatarPopupState(true);\n    setEscListener();\n  }\n\n  function handleEditProfileClick() {\n    setProfilePopupState(true);\n    setEscListener();\n  }\n\n  function handleAddPlaceClick() {\n    setPlacePopupState(true);\n    setEscListener();\n  }\n\n  function handleDeleteCardClick(card) {\n    setDeleteCardPopupState(true);\n    setCardToDelete(card);\n    setEscListener();\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImagePopupState(true);\n    setEscListener();\n  }\n\n  function handleErrorMessage(err) {\n    setErrorState(err);\n    setErrorPopupState(true);\n    setEscListener();\n  }\n\n  function closeAllPopups() {\n    setPlacePopupState(false);\n    setProfilePopupState(false);\n    setAvatarPopupState(false);\n    setDeleteCardPopupState(false);\n    setErrorPopupState(false);\n    setImagePopupState(false);\n    document.removeEventListener('keyup', handleEscPopupClose);\n  }\n\n  function handleEscPopupClose(evt) {\n    if (evt.key === 'Escape') {\n      closeAllPopups();\n    }\n  }\n\n  function handleUpdateUser(userStateObj) {\n    apiRequest.saveUserInfo(userStateObj)\n    .then((user) => {\n      setCurrentUser(user);\n    })\n    .catch(err => {\n      console.log(err);\n      handleErrorMessage(err);\n    })\n    .finally(() => {\n      setProfilePopupState(false);\n    })\n  }\n\n  function handleUpdateAvatar(avatarStateObj) {\n    apiRequest.saveAvatar(avatarStateObj)\n    .then((avatar) => {\n      setCurrentUser(avatar);\n    })\n    .catch(err => {\n      console.log(err);\n      handleErrorMessage(err);\n    })\n    .finally(() => {\n      setAvatarPopupState(false);\n    })\n  }\n\n  function handleAddPlaceSubmit(card) {\n    apiRequest.postCard(card)\n    .then((newCard) => {\n      setCards([newCard, ...cards]);\n    })\n    .catch(err => {\n      console.log(err);\n      handleErrorMessage(err);\n    })\n    .finally(() => {\n      setPlacePopupState(false);\n    })\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n      // Отправляем запрос в API и получаем обновлённые данные карточки\n    apiRequest.changeLikeCardStatus(card._id, isLiked)\n    .then((newCard) => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        // Обновляем стейт\n      setCards(newCards);\n    })\n    .catch(err => {\n      console.log(err);\n      handleErrorMessage(err);\n    })\n  } \n\n  function handleCardDelete() {    \n    apiRequest.delCard(cardToDelete._id)\n    .then(() => {\n      const newCards = cards.filter((c) => c._id !== cardToDelete._id);\n      setCards(newCards);\n    })\n    .catch(err => {\n      console.log(err);\n      handleErrorMessage(err);\n    })\n    .finally(() => {\n      setDeleteCardPopupState(false);\n    })\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <CardsContext.Provider value={cards}>\n        <div className=\"page\">\n          <Header />\n          <Main \n          onEditProfile={handleEditProfileClick} \n          onAddPlace={handleAddPlaceClick} \n          onEditAvatar={handleEditAvatarClick} \n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleDeleteCardClick}\n          />\n          <Footer />\n\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n\n          <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} /> \n\n          <DeleteCardPopup isOpen={isDeleteCardPopupOpen} onClose={closeAllPopups} onCardDelete={handleCardDelete} /> \n\n          <ErrorPopup isOpen={isErrorPopupOpen} onClose={closeAllPopups} errCode={error} /> \n\n          <ImagePopup card={selectedCard} modalState={isImagePopupOpen && 'modal_opened'} onClose={closeAllPopups} />\n        </div>\n      </CardsContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}