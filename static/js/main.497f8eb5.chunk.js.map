{"version":3,"sources":["components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","apiRequest","config","this","_url","url","_token","token","fetch","method","headers","authorization","then","res","ok","json","Promise","reject","status","data","body","JSON","stringify","cardId","formData","like","Card","card","onCardClick","type","src","link","alt","name","onClick","likes","length","Main","onEditProfile","onAddPlace","onEditAvatar","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","user","items","about","avatar","catch","err","console","log","map","el","key","_id","Footer","PopupWithForm","modalState","title","containerClass","onClose","children","ImagePopup","App","isEditProfilePopupOpen","setProfilePopupState","isAddPlacePopupOpen","setPlacePopupState","isEditAvatarPopupOpen","setAvatarPopupState","selectedCard","setSelectedCard","closeAllPopups","undefined","action","noValidate","id","placeholder","required","minLength","maxLength","autoComplete","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.497f8eb5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n        <div className=\"header__logo\"></div>\r\n    </header>\r\n  );\r\n}\r\n  \r\nexport default Header;","export class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._token = config.token;\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  postCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  delCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  saveUserInfo(formData) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  saveAvatar(formData) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  likeCard(cardId, like) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: like ? 'PUT' : 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n}\n\nconst apiRequest = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-15',\n  token: '06e1dc17-91d9-4de2-856b-fec4fd742305'\n})\n\nexport default apiRequest;","import React from 'react';\r\n\r\nfunction Card({ card, onCardClick }) {\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }  \r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <button type=\"button\" className=\"card__delete-button\"></button>\r\n      <img src={card ? card.link : ''} alt={card ? card.name : ''} className=\"card__image\" onClick={handleClick}/>\r\n      <div className=\"card__conteiner\">\r\n        <h2 className=\"card__title\">{card ? card.name : ''}</h2>\r\n        <button type=\"button\" className=\"card__like-button\"><span className=\"card__like-counter\">{card ? card.likes.length : ''}</span></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport apiRequest from '../utils/api.js'\r\nimport Card from './Card.js'\r\n\r\nfunction Main({ onEditProfile, onAddPlace, onEditAvatar, onCardClick }) {\r\n  const [userName, setUserName] = React.useState();\r\n  const [userDescription , setUserDescription] = React.useState();\r\n  const [userAvatar, setUserAvatar] = React.useState();\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    Promise.all([apiRequest.getUserInfo(), apiRequest.getInitialCards()])\r\n    .then(([user, items]) => {\r\n      setUserName(user.name);\r\n      setUserDescription(user.about);\r\n      setUserAvatar(user.avatar);      \r\n      setCards(items);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__overlay\" onClick={onEditAvatar}>\r\n          <img src={userAvatar} alt=\"Аватар\" className=\"profile__avatar\" />\r\n        </div>\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__name\">{userName}</h1>\r\n          <button type=\"button\" className=\"profile__edit-button\" onClick={onEditProfile}></button>\r\n          <p className=\"profile__character\">{userDescription}</p>\r\n        </div>\r\n        <button type=\"button\" className=\"profile__add-button\" onClick={onAddPlace}></button>\r\n      </section>\r\n      <section className=\"elements\">\r\n        {cards.map(el => <Card card={el} key={el._id} onCardClick={onCardClick}/>)}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm({ name, modalState, title, containerClass, onClose, children }) {\r\n  return (\r\n    <>\r\n      <div className={`modal modal_type_${name} ${modalState}`}>\r\n        <div className={`modal__container ${containerClass}`}>\r\n          <button type=\"button\" className=\"modal__close-button\" onClick={onClose}></button>\r\n          <h3 className=\"modal__title\">{title}</h3>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup({ card, modalState, onClose }) {\r\n  return (\r\n    <div className={`modal modal_type_photo ${modalState}`}>\r\n      <div className=\"modal__container modal__conteiner_type_photo\">\r\n        <button type=\"button\" className=\"modal__close-button\" onClick={onClose}></button>\r\n        <img src={card ? card.link : '#'} alt={card ? card.name : ''} className=\"modal__image\"/>\r\n        <h3 className=\"modal__title modal__title_type_photo\">{card ? card.name : ''}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup.js';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setProfilePopupState] = React.useState(false);\n  const [isAddPlacePopupOpen, setPlacePopupState] = React.useState(false);\n  const [isEditAvatarPopupOpen, setAvatarPopupState] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState();\n\n  function handleEditAvatarClick() {\n    setAvatarPopupState(true);  \n  }\n\n  function handleEditProfileClick() {\n    setProfilePopupState(true);\n  }\n\n  function handleAddPlaceClick() {\n    setPlacePopupState(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setPlacePopupState(false);\n    setProfilePopupState(false);\n    setAvatarPopupState(false);\n    setSelectedCard(undefined);\n  }\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main \n      onEditProfile={handleEditProfileClick} \n      onAddPlace={handleAddPlaceClick} \n      onEditAvatar={handleEditAvatarClick} \n      onCardClick={handleCardClick}\n      />\n      <Footer />\n\n      <PopupWithForm \n        title='Редактировать профиль' \n        name='edit-profile' \n        modalState={isEditProfilePopupOpen ? 'modal_opened' : ''} \n        onClose={closeAllPopups}\n        children={\n        <form action=\"#\" name=\"edit-profile\" className=\"modal__form modal__form_type_profile\" noValidate>\n          <input id=\"name-input\" name=\"name\" type=\"text\" className=\"modal__input modal__input_type_name\" placeholder=\"Имя\" required minLength=\"2\" maxLength=\"40\" autoComplete=\"off\"/>\n          <span id=\"name-input-error\" className=\"modal__input-error\"></span>\n          <input id=\"character-input\" name=\"about\" type=\"text\" className=\"modal__input modal__input_type_character\" placeholder=\"Занятие\" required minLength=\"2\" maxLength=\"200\" autoComplete=\"off\"/>\n          <span id=\"character-input-error\" className=\"modal__input-error\"></span>\n          <button type=\"submit\" className=\"modal__save-button\">Сохранить</button>\n        </form>\n      }/>\n\n      <PopupWithForm \n        title='Новое место' \n        name='add-card' \n        modalState={isAddPlacePopupOpen ? 'modal_opened' : ''} \n        onClose={closeAllPopups}\n        children={\n        <form action=\"#\" name=\"add-card\" className=\"modal__form modal__form_type_addcard\" noValidate>\n          <input id=\"place-input\" name=\"name\" type=\"text\" className=\"modal__input modal__input_type_place\" placeholder=\"Название\" required minLength=\"1\" maxLength=\"30\" autoComplete=\"off\"/>\n          <span id=\"place-input-error\" className=\"modal__input-error\"></span>\n          <input id=\"url-input\" name=\"link\" type=\"url\" className=\"modal__input modal__input_type_link\" placeholder=\"Ссылка на картинку\" required minLength=\"2\" maxLength=\"200\" autoComplete=\"off\"/>\n          <span id=\"url-input-error\" className=\"modal__input-error\"></span>\n          <button type=\"submit\" className=\"modal__save-button\">Создать</button>\n        </form>\n      }/>\n\n      <PopupWithForm \n        title='Обновить аватар' \n        name='edit-avatar' \n        modalState={isEditAvatarPopupOpen ? 'modal_opened' : ''} \n        onClose={closeAllPopups}\n        children={\n        <form action=\"#\" name=\"edit-avatar\" className=\"modal__form modal__form_type_avatar\" noValidate>\n          <input id=\"url-input\" name=\"avatar\" type=\"url\" className=\"modal__input modal__input_type_link\" placeholder=\"Ссылка на аватар\" required minLength=\"2\" maxLength=\"200\" autoComplete=\"off\"/>\n          <span id=\"url-input-error\" className=\"modal__input-error\"></span>\n          <button type=\"submit\" className=\"modal__save-button\">Сохранить</button>\n        </form>\n      }/>\n\n      <PopupWithForm title='Вы уверены?' name='del-card'  children={\n        <button type=\"button\" className=\"modal__confirm-button\">Да</button>\n      }/>\n\n      <PopupWithForm title='Что-то пошло не так...' name='error'   containerClass='modal__conteiner_type_error'/>\n\n      <ImagePopup card={selectedCard} modalState={selectedCard && 'modal_opened'} onClose={closeAllPopups} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}